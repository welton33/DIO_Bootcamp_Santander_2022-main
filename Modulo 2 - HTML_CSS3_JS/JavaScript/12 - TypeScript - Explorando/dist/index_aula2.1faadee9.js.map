{"version":3,"sources":["index_aula2.ts"],"names":[],"mappings":"AAAA;AACA;AAoBA;AACA,IAAM,MAAM,GAAY;EACpB,IAAI,EAAE,UADc;EAEpB,IAAI,EAAE,WAFc;EAGpB,SAAS,EAAE,IAHS,CAIpB;;AAJoB,CAAxB,EAOA;;AACA,IAAM,MAAM,GAAY;EACpB,IAAI,EAAE,MADc;EAEpB,IAAI,EAAE,WAFc;EAGpB,YAAY,EAAE,IAHM;EAIpB,SAAS,EAAE,IAJS,CAKpB;;AALoB,CAAxB;AAWA,IAAM,OAAO,GAAe;EACxB,SAAS,EAAE,IADa;EAExB,IAAI,EAAE,UAFkB;EAGxB,KAAK,EAAE,OAHiB;EAIxB,IAAI,EAAE;AAJkB,CAA5B,EAOA;AAEA","file":"index_aula2.1faadee9.js","sourceRoot":"..","sourcesContent":["// interfaces: são contratos para implementar suas classes.\r\n// types: são usados para juntar interfaces.\r\n\r\n// Interface principal\r\ninterface IAnimal {\r\n    nome: string;\r\n    tipo: 'terrestre' | 'aquático';\r\n    domestico: boolean;\r\n    // executarRugido(alturaEmDecibeis: number): void;\r\n}\r\n\r\n// Herdando \r\ninterface Ifelino extends IAnimal {\r\n    visaoNoturna: boolean;\r\n}\r\n\r\n// Herdando\r\ninterface ICanino extends IAnimal {\r\n    porte: 'pequeno' | 'medio' | 'grande';\r\n}\r\n\r\n// Criando um objeto \r\nconst animal: IAnimal = {\r\n    nome: 'Elefante',\r\n    tipo: 'terrestre',\r\n    domestico: true\r\n    // executarRugido: (alturaEmDecibeis) => (`${alturaEmDecibeis}db`)\r\n}\r\n\r\n// Criando um objeto com herança\r\nconst felino: Ifelino = {\r\n    nome: 'Leão',\r\n    tipo: 'terrestre',\r\n    visaoNoturna: true,\r\n    domestico: true\r\n    // executarRugido: (alturaEmDecibeis) => (`${alturaEmDecibeis}db`)\r\n}\r\n\r\n// Juntando interfaces podendo implementar ambos ou não\r\ntype IDomestico = Ifelino | ICanino; \r\n\r\nconst animal2: IDomestico = {\r\n    domestico: true,\r\n    nome: 'cachorro',\r\n    porte: 'medio',\r\n    tipo: 'terrestre',\r\n}\r\n\r\n// console.log(animal.executarRugido(2)); \r\n\r\n// console.log(\"Domestico:\" + animal2.domestico + \" \" + \"Nome:\" + animal2.porte + \" \" + \"Porte:\" + animal2.porte + \" \" + \"Tipo:\" + animal2.tipo); "]}