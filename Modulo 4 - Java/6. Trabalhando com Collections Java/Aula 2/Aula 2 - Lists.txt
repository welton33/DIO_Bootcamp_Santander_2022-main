

-------------------------------------------------------------------------

java.util.List

-> Elementos duplicados e garante ordem de inserção.

- ArrayList: Ser usado onde mais operações de pesquisa são necessárias.
- LinkedList: Deve ser usado onde mais operações de inserção e exclusão são necessárias.

ArrayList:

List<tipo> variavel = new ArrayList<tipo>(); // Criar Lista
variavel.add(valor); // Adicionar elementos
variavel.indexOf(valor); // Retorna a posição do elemento na lista
variavel.add (i: valor, e: valor) // Adiciona na posicao(i) o valor(e)
variavel.set(variavel.indexOf(valor), valor) // Substitui o valor da posição informada pelo valor indicado
variavel.contains(valor) // Varre a lista para buscar o elemento, retorna um boolean
variavel.get(valor) // retorna o elemento da posição
variavel.size() // retorna a quantidade de elementos
variavel.remove(i: valor ou e: valor) // i remove o elemento da posição e remove o valor buscado
variavel.clear() // apaga toda lista
variavel.isEmpty() // verifica se está vazio retorna boolean

Obs: Não existe um método nativo em ArrayList então usa-se a Collections para buscar o min e max.
Collection.min(variavel) / Collection.max(variavel) 

Não existe um método nativo em ArrayList então usa-se o Iterator para somar.

Iterator<tipo> iterator = variavel.iterator();
    Tipo variavel2 = 0;
    while(iterator.hasNext()){
      Tipo variavel1 = iterator.next();
      variavel2 += next;
    }

Slides: https://drive.google.com/file/d/1tFsgADr5gYFEa4fQS0XzpK8i4ADqt95W/view


